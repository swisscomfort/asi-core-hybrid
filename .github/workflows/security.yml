name: 🛡️ Security Audit

on:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM UTC
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'requirements.txt'
      - 'web/package*.json'

jobs:
  python-security:
    name: 🐍 Python Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: 🔒 Install Security Tools
      run: |
        pip install safety bandit semgrep
        
    - name: 🔍 Safety Check (Known Vulnerabilities)
      run: |
        safety check -r requirements.txt --json > safety-report.json || true
        
    - name: 🔍 Bandit Scan (Code Security)
      run: |
        bandit -r asi_core/ src/ -f json -o bandit-report.json || true
        
    - name: 🔍 Semgrep Scan (SAST)
      run: |
        semgrep --config=auto --json --output=semgrep-report.json asi_core/ src/ || true
        
    - name: 📊 Upload Security Reports
      uses: actions/upload-artifact@v3
      with:
        name: python-security-reports
        path: |
          safety-report.json
          bandit-report.json
          semgrep-report.json

  frontend-security:
    name: ⚛️ Frontend Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
        
    - name: 🔒 NPM Security Audit
      working-directory: ./web
      run: |
        npm audit --audit-level moderate --json > npm-audit.json || true
        
    - name: 📊 Upload Frontend Security Report
      uses: actions/upload-artifact@v3
      with:
        name: frontend-security-reports  
        path: web/npm-audit.json

  secrets-scan:
    name: 🔐 Secrets Detection
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🔍 GitLeaks Scan
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

  dependency-review:
    name: 📋 Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🔍 Dependency Review
      uses: actions/dependency-review-action@v3
      with:
        fail-on-severity: moderate

  security-summary:
    name: 📊 Security Summary
    runs-on: ubuntu-latest
    needs: [python-security, frontend-security, secrets-scan]
    if: always()
    
    steps:
    - name: 📥 Download Reports
      uses: actions/download-artifact@v3
      with:
        path: reports/
        
    - name: 📊 Generate Security Summary
      run: |
        echo "# 🛡️ Security Audit Summary" > security-summary.md
        echo "**Date:** $(date)" >> security-summary.md
        echo "" >> security-summary.md
        
        echo "## 🐍 Python Security" >> security-summary.md
        if [ -f "reports/python-security-reports/safety-report.json" ]; then
          echo "- ✅ Safety scan completed" >> security-summary.md
        else
          echo "- ❌ Safety scan failed" >> security-summary.md
        fi
        
        if [ -f "reports/python-security-reports/bandit-report.json" ]; then
          echo "- ✅ Bandit scan completed" >> security-summary.md
        else
          echo "- ❌ Bandit scan failed" >> security-summary.md
        fi
        
        echo "" >> security-summary.md
        echo "## ⚛️ Frontend Security" >> security-summary.md
        if [ -f "reports/frontend-security-reports/npm-audit.json" ]; then
          echo "- ✅ NPM audit completed" >> security-summary.md
        else
          echo "- ❌ NPM audit failed" >> security-summary.md
        fi
        
        echo "" >> security-summary.md
        echo "## 📋 Next Steps" >> security-summary.md
        echo "1. Review security reports in artifacts" >> security-summary.md
        echo "2. Address any high/critical vulnerabilities" >> security-summary.md
        echo "3. Update dependencies regularly" >> security-summary.md
        
        cat security-summary.md
        
    - name: 📊 Upload Security Summary
      uses: actions/upload-artifact@v3
      with:
        name: security-summary
        path: security-summary.md